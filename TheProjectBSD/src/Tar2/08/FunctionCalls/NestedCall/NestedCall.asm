 // vm command: function
(Sys.init)
@0
D=A
@Sys.init.End
D;JEQ
(Sys.init.Loop)
@SP
A=M
M=0
@SP
M=M+1
@Sys.init.Loop
D=D-1;JNE
(Sys.init.End)
// vm command: push constant
@4000	
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop pointer 0
@SP
A=M-1
D=M
@THIS
M=D
@SP
M=M-1
// vm command: push constant
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop pointer 1
@SP
A=M-1
D=M
@THAT
M=D
@SP
M=M-1
// vm command: call
@Sys.main.ReturnAddress0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.main.ReturnAddress0)
// vm command: pop temp
@5
D=A
@1
D=D+A
@SP
A=M
M=D
@SP
A=M-1
D=M
@SP
A=M
A=M
M=D
@SP
M=M-1
// vm command: label
(Sys.LOOP)
// vm command: goto
@Sys.LOOP
0;JMP
// vm command: function
(Sys.main)
@5
D=A
@Sys.main.End
D;JEQ
(Sys.main.Loop)
@SP
A=M
M=0
@SP
M=M+1
@Sys.main.Loop
D=D-1;JNE
(Sys.main.End)
// vm command: push constant
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop pointer 0
@SP
A=M-1
D=M
@THIS
M=D
@SP
M=M-1
// vm command: push constant
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop pointer 1
@SP
A=M-1
D=M
@THAT
M=D
@SP
M=M-1
// vm command: push constant
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop local
@LCL
D=M
@SP
A=M
M=D
@1
D=A
@SP
A=M
M=D+M
@SP
A=M-1
D=M
@SP
A=M
A=M
M=D
@SP
M=M-1
// vm command: push constant
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop local
@LCL
D=M
@SP
A=M
M=D
@2
D=A
@SP
A=M
M=D+M
@SP
A=M-1
D=M
@SP
A=M
A=M
M=D
@SP
M=M-1
// vm command: push constant
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop local
@LCL
D=M
@SP
A=M
M=D
@3
D=A
@SP
A=M
M=D+M
@SP
A=M-1
D=M
@SP
A=M
A=M
M=D
@SP
M=M-1
// vm command: push constant
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: call
@Sys.add12.ReturnAddress1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.add12.ReturnAddress1)
// vm command: pop temp
@5
D=A
@0
D=D+A
@SP
A=M
M=D
@SP
A=M-1
D=M
@SP
A=M
A=M
M=D
@SP
M=M-1
// vm command: push local
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// vm command: push local
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// vm command: push local
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// vm command: push local
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// vm command: push local
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// vm command: add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// vm command: add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// vm command: add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// vm command: add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// vm command: return
@LCL
D=M
@5
A=D-A
D=M
@13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@LCL
 M=M-1
A=M
D=M
@THAT
M=D
@LCL
M=M-1
A=M
D=M
@THIS
M=D
@LCL
M=M-1
A=M
D=M
@ARG
M=D
@LCL
M=M-1
A=M
D=M
@LCL
M=D
@13
A=M
0; JMP
// vm command: function
(Sys.add12)
@0
D=A
@Sys.add12.End
D;JEQ
(Sys.add12.Loop)
@SP
A=M
M=0
@SP
M=M+1
@Sys.add12.Loop
D=D-1;JNE
(Sys.add12.End)
// vm command: push constant
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop pointer 0
@SP
A=M-1
D=M
@THIS
M=D
@SP
M=M-1
// vm command: push constant
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: pop pointer 1
@SP
A=M-1
D=M
@THAT
M=D
@SP
M=M-1
// vm command: push argument
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
// vm command: push constant
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// vm command: add
@SP
A=M-1
D=M
A=A-1
M=D+M
@SP
M=M-1
// vm command: return
@LCL
D=M
@5
A=D-A
D=M
@13
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@LCL
 M=M-1
A=M
D=M
@THAT
M=D
@LCL
M=M-1
A=M
D=M
@THIS
M=D
@LCL
M=M-1
A=M
D=M
@ARG
M=D
@LCL
M=M-1
A=M
D=M
@LCL
M=D
@13
A=M
0; JMP
