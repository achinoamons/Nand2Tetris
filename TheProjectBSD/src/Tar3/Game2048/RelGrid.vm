function RelGrid.new 9
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 4
call Array.new 1
pop this 0
push argument 0
pop this 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push this 1
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 3
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 1
push local 3
add
push this 1
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push local 3
add
pop pointer 1
push that 0
pop local 4
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push this 1
lt
not
if-goto WHILE_END2
push local 2
push local 4
add
call Coordinate.default 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push local 4
add
pop pointer 1
push that 0
pop local 7
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 7
push local 1
call Coordinate.set_x 2
pop temp 0
push local 7
push local 2
call Coordinate.set_y 2
pop temp 0
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 5
push local 1
push local 5
add
pop pointer 1
push that 0
pop local 6
push local 2
push local 6
add
pop pointer 1
push that 0
pop local 8
push local 7
push local 8
call Coordinate.get_y 1
call Coordinate.set_x 2
pop temp 0
push local 7
push this 1
push constant 1
sub
push local 8
call Coordinate.get_x 1
sub
call Coordinate.set_y 2
pop temp 0
label IF_END0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function RelGrid.dispose 6
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 4
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 3
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 1
push local 3
add
pop pointer 1
push that 0
pop local 4
push constant 0
pop local 2
label WHILE_EXP2
push local 2
push this 1
lt
not
if-goto WHILE_END2
push local 2
push local 4
add
pop pointer 1
push that 0
pop local 5
push local 5
call Coordinate.dispose 1
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push local 4
call Array.dispose 1
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 3
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function RelGrid.direction 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
