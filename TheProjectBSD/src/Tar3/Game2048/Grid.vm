function Grid.new 1
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 1
push this 1
call Array.new 1
pop this 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push this 1
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call Grid.insert_tile 1
pop temp 0
push pointer 0
call Grid.insert_tile 1
pop temp 0
push this 1
call RelGrid.new 1
pop this 2
push pointer 0
return
function Grid.dispose 2
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push this 2
call RelGrid.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Grid.move 12
push argument 0
pop pointer 0
push this 2
push argument 1
call RelGrid.direction 2
pop local 7
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 1
neg
pop local 2
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push local 7
add
pop pointer 1
push that 0
pop local 8
push local 1
push local 8
add
pop pointer 1
push that 0
pop local 11
push local 11
call Coordinate.get_x 1
pop local 3
push local 11
call Coordinate.get_y 1
pop local 4
push local 3
push this 0
add
pop pointer 1
push that 0
pop local 9
push local 4
push local 9
add
pop pointer 1
push that 0
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
neg
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push local 8
add
pop pointer 1
push that 0
pop local 11
push local 11
call Coordinate.get_x 1
pop local 5
push local 11
call Coordinate.get_y 1
pop local 6
push local 3
push this 0
add
pop pointer 1
push that 0
pop local 9
push local 5
push this 0
add
pop pointer 1
push that 0
pop local 10
push local 6
push local 10
add
push local 4
push local 9
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push local 9
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 1
add
pop local 2
label IF_FALSE1
goto IF_END0
label IF_FALSE0
push local 2
push constant 1
neg
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
pop local 2
label IF_FALSE2
label IF_END0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.join 12
push argument 0
pop pointer 0
push this 2
push argument 1
call RelGrid.direction 2
pop local 7
push constant 0
pop local 6
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push local 7
add
pop pointer 1
push that 0
pop local 8
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
push constant 1
sub
lt
not
if-goto WHILE_END1
push local 1
push local 8
add
pop pointer 1
push that 0
pop local 11
push local 11
call Coordinate.get_x 1
pop local 2
push local 11
call Coordinate.get_y 1
pop local 3
push local 2
push this 0
add
pop pointer 1
push that 0
pop local 9
push local 3
push local 9
add
pop pointer 1
push that 0
pop local 4
push local 4
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
push local 8
add
pop pointer 1
push that 0
pop local 11
push local 11
call Coordinate.get_x 1
push this 0
add
pop pointer 1
push that 0
pop local 10
push local 4
push local 11
call Coordinate.get_y 1
push local 10
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
push constant 2
call Math.multiply 2
pop local 5
push local 3
push local 9
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 11
call Coordinate.get_y 1
push local 10
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 6
push local 5
add
pop local 6
label IF_FALSE1
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 6
return
function Grid.shift 1
push argument 0
pop pointer 0
push pointer 0
push argument 1
call Grid.move 2
pop temp 0
push pointer 0
push argument 1
call Grid.join 2
pop local 0
push pointer 0
push argument 1
call Grid.move 2
pop temp 0
push pointer 0
call Grid.insert_tile 1
pop temp 0
push local 0
return
function Grid.empty_squares 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 1
push local 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 1
add
pop local 2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Grid.rand_empty_square 5
push argument 0
pop pointer 0
push pointer 0
call Grid.empty_squares 1
pop local 0
push constant 0
push local 0
push constant 1
sub
call Random.randRange 2
pop local 1
push constant 0
pop local 2
push constant 0
pop local 3
label WHILE_EXP0
push local 2
push this 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 3
push this 1
lt
not
if-goto WHILE_END1
push local 2
push this 0
add
pop pointer 1
push that 0
pop local 4
push local 3
push local 4
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 2
push local 3
call Coordinate.new 2
return
label IF_FALSE1
push local 1
push constant 1
sub
pop local 1
label IF_FALSE0
push local 3
push constant 1
add
pop local 3
goto WHILE_EXP1
label WHILE_END1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
push constant 0
call Coordinate.new 2
return
function Grid.insert_tile 2
push argument 0
pop pointer 0
push pointer 0
call Grid.rand_empty_square 1
pop local 1
push local 1
call Coordinate.get_x 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 1
call Coordinate.get_y 1
push local 0
add
push pointer 0
call Grid.get_new_tile 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
call Coordinate.dispose 1
pop temp 0
push constant 0
return
function Grid.get_new_tile 0
push argument 0
pop pointer 0
push constant 0
push constant 9
call Random.randRange 2
push constant 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 4
return
label IF_FALSE0
push constant 2
return
function Grid.has_empty 3
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 1
push local 2
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.can_shift 10
push argument 0
pop pointer 0
push this 2
push argument 1
call RelGrid.direction 2
pop local 4
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
push local 0
push local 4
add
pop pointer 1
push that 0
pop local 5
push constant 1
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push local 1
push local 5
add
pop pointer 1
push that 0
pop local 8
push local 1
push constant 1
sub
push local 5
add
pop pointer 1
push that 0
pop local 9
push local 8
call Coordinate.get_x 1
push this 0
add
pop pointer 1
push that 0
pop local 6
push local 8
call Coordinate.get_y 1
push local 6
add
pop pointer 1
push that 0
pop local 2
push local 9
call Coordinate.get_x 1
push this 0
add
pop pointer 1
push that 0
pop local 7
push local 9
call Coordinate.get_y 1
push local 7
add
pop pointer 1
push that 0
pop local 3
push local 2
push constant 0
eq
not
push local 3
push constant 0
eq
push local 3
push local 2
eq
or
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Grid.stuck 0
push argument 0
pop pointer 0
push pointer 0
call Grid.has_empty 1
push pointer 0
call Directions.up 0
call Grid.can_shift 2
or
push pointer 0
call Directions.down 0
call Grid.can_shift 2
or
push pointer 0
call Directions.left 0
call Grid.can_shift 2
or
push pointer 0
call Directions.right 0
call Grid.can_shift 2
or
not
return
function Grid.print 6
push argument 0
pop pointer 0
call Strings.get_underscores_1 0
call Output.printString 1
pop temp 0
push constant 1
pop local 0
label WHILE_EXP0
push local 0
push this 1
lt
not
if-goto WHILE_END0
call Strings.get_underscores_2 0
call Output.printString 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
call Output.println 0
pop temp 0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push this 1
lt
not
if-goto WHILE_END1
push constant 0
pop local 0
label WHILE_EXP2
push local 0
push this 1
lt
not
if-goto WHILE_END2
call Strings.get_bar_with_spaces 0
call Output.printString 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
call Strings.get_bar 0
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
pop local 2
label WHILE_EXP3
push local 2
push this 1
lt
not
if-goto WHILE_END3
push local 2
push this 0
add
pop pointer 1
push that 0
pop local 5
push this 1
push constant 1
sub
push local 1
sub
push local 5
add
pop pointer 1
push that 0
pop local 3
push local 3
call Utils.digits 1
pop local 4
push constant 1
pop local 0
call Strings.get_bar 0
call Output.printString 1
pop temp 0
call Strings.get_space 0
call Output.printString 1
pop temp 0
push local 4
push constant 4
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Strings.get_space 0
call Output.printString 1
pop temp 0
label IF_FALSE0
push local 4
push constant 2
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Strings.get_space 0
call Output.printString 1
pop temp 0
label IF_FALSE1
push local 3
push constant 0
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 3
call Output.printInt 1
pop temp 0
label IF_FALSE2
push local 4
push constant 5
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
call Strings.get_space 0
call Output.printString 1
pop temp 0
label IF_FALSE3
push local 4
push constant 3
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
call Strings.get_space 0
call Output.printString 1
pop temp 0
label IF_FALSE4
push local 4
push constant 1
lt
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
call Strings.get_space 0
call Output.printString 1
pop temp 0
label IF_FALSE5
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
call Strings.get_bar 0
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push constant 0
pop local 0
label WHILE_EXP4
push local 0
push this 1
lt
not
if-goto WHILE_END4
call Strings.get_bar_with_underscores 0
call Output.printString 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP4
label WHILE_END4
call Strings.get_bar 0
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
